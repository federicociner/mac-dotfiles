# ---------------------- BEGIN: Homebrew settings ---------------------- #
# Prioritize Homebrew-installed applications
# On Apple silicon, Homebrew installs files into the /opt/homebrew/ folder, which is not part of
# the default shell $PATH.
arch=$(uname -m)
if [[ $arch == "arm64" ]]; then
    eval $(/opt/homebrew/bin/brew shellenv)
fi
export PATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH"

# setsid
export PATH="/opt/homebrew/opt/util-linux/bin:$PATH"
# ---------------------- END: Homebrew settings ------------------------ #

# ---------------------- BEGIN: oh-my-zsh settings --------------------- #
DISABLE_MAGIC_FUNCTIONS="true"
ZSH_DISABLE_COMPFIX=true

# Path to your oh-my-zsh installation.
export ZSH="/Users/$USER/.oh-my-zsh"

# Install nvm using zsh-nvm plugin
export NVM_COMPLETION=true
export NVM_LAZY_LOAD=true

# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(evalcache docker docker-compose git virtualenv zsh-autosuggestions zsh-nvm zsh-syntax-highlighting)
source $ZSH/oh-my-zsh.sh

# Beautify iterm2 prompt with Pure theme
export ZPLUG_HOME=$(brew --prefix)/opt/zplug
source $ZPLUG_HOME/init.zsh
zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug load

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
# ---------------------- END: oh-my-zsh settings ----------------------- #

# ---------------------- BEGIN: pyenv settings ------------------------- #
# Installation: https://github.com/pyenv/pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

# Load pyenv in the background to avoid blocking shell startup
{
    eval "$(pyenv init - --no-rehash)"
    eval "$(pyenv virtualenv-init -)"
} &!

_evalcache pyenv init -
_evalcache pyenv virtualenv-init -
# ---------------------- END: pyenv settings --------------------------- #

# ---------------------- BEGIN: add aliases ---------------------------- #
# Alias commonly used commands
alias ll='ls -FGlAhp'
alias mv='mv -iv'
alias mkdir='mkdir -pv'
alias ls='ls -GFh'

# git aliases
git config --global alias.acm '!git add -A && git commit -m'
git config --global alias.arc '!git add -A && git rebase --continue'
git config --global alias.gst '!git status -sb'
git config --global alias.co '!git checkout'
git config --global alias.po '!git push origin'
git config --global alias.pf '!git push --force'
git config --global alias.pu '!git pull origin $(git rev-parse --abbrev-ref HEAD)'
git config --global alias.sup '!git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)'
git config --global alias.far '!git fetch origin $(git rev-parse --abbrev-ref origin/HEAD | sed "s|^origin/||") && git rebase $(git rev-parse --abbrev-ref origin/HEAD)'
# ---------------------- END: add aliases ------------------------------ #

# ---------------------- BEGIN: misc settings -------------------------- #
# Load fzf fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Include dotfiles in file system operations
setopt dotglob

# Enable local user scripts
export PATH="$HOME/bin:$PATH"
# ---------------------- END: misc settings ---------------------------- #

# ---------------------- BEGIN: load secrets --------------------------- #
if [[ -f "$HOME/.dotfiles/.secrets.local" ]]; then
    set -a  # automatically export all variables
    source "$HOME/.dotfiles/.secrets.local"
    set +a  # turn off auto-export
fi
# ---------------------- END: load secrets ----------------------------- #
